func move(direction: Vector2):
	var target_move_position = global_position + direction * move_distance
	
	#Get current tile Vector2i
	var current_tile : Vector2i = tile_map.local_to_map(global_position)
	
	#Get target tile Vector2i
	var target_tile: Vector2i = Vector2i(
		current_tile.x + direction.x,
		current_tile.y + direction.y
	)
	#Get custom data layer from target tile
	var tile_data: TileData = tile_map.get_cell_tile_data(0, target_tile)
	
	if tile_data.get_custom_data("walkable") == false:
		return
	
	#move, then check if colliding objects need to update
	if tween and tween.is_running():
		return
	tween = get_tree().create_tween()
	tween.tween_property(self, "global_position", target_move_position, 0.16).set_trans(Tween.TRANS_BOUNCE)
	
	#raycast
	ray_cast_2d.target_position = direction * move_distance
	ray_cast_2d.force_raycast_update()
	
	if ray_cast_2d.is_colliding():
		ray_cast_2d.get_collider().get_parent().move(direction) 
		return
		
	return
